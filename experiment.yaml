version: 1.0.0
title: System is resilient to provider's failures
description: "Can our consumer survive gracefully a provider's failure?"
tags:
- service
- kubernetes
- spring
#env:
#- name: CHAOSTOOLKIT_IN_POD
#  value: "true"
#secrets:
#  k8s:
#    KUBERNETES_CONTEXT: minikube

steady-state-hypothesis:
  title: "Services are all available and healthy"
  probes:
  - name: all-services-are-healthy
    type: probe
    tolerance: true

    provider:
      type: python
      module: chaosk8s.probes
      func: all_microservices_healthy
      arguments:
        ns: qa

  - name: count-pods
    type: action
    tolerance:
      type: range
      range:
      - 1
      - 10
    provider:
      func: count_pods
      arguments:
        label_selector: "app.kubernetes.io/name=app-qa"
        ns: app-qa
      module: chaosk8s.pod.probes
      type: python

  - name: consumer-service-must-still-respond
    type: probe
    tolerance: 200
    provider:
      type: http
      url: "http://qaci.app.io/probe"

  - name: read-microservices-logs
    type: probe
    tolerance:
      type: regex
      target: app-container
      pattern: "APP: OK"
    provider:
      func: read_microservices_logs
      arguments:
        label_selector: "app.kubernetes.io/name=app-qa"
        ns: qa
        container_name: app-container
      module: chaosk8s.probes
      type: python

method:
- name: terminate-pods
  provider:
    func: terminate_pods
    arguments:
      label_selector: "app.kubernetes.io/name=app-qa"
      ns: qa
    module: chaosk8s.pod.actions
    type: python
  type: action
  pauses:
    after: 50
